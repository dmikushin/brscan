SHELL = /bin/sh

VPATH = @srcdir@
srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = .

PACKAGE = @PACKAGE@
VERSION = @VERSION@
distdir = $(PACKAGE)-$(VERSION)

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

MKDIR = $(top_srcdir)/mkinstalldirs
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

@SET_MAKE@

SUBDIRS	= backend_brscan  backend_brscan2

DISTFILES = AUTHORS COPYING ChangeLog ChangeLog-1.0.0 ChangeLog-1.0.1 \
  ChangeLog-1.0.2 ChangeLog-1.0.3 ChangeLog-1.0.4 ChangeLog-1.0.5 LEVEL2 \
  LICENSE Makefile.in NEWS \
  PROBLEMS PROJECTS README README.aix README.hp-ux README.linux README.netbsd \
  README.openbsd README.os2 README.solaris README.unixware2 README.unixware7 \
  TODO acinclude.m4 aclocal.m4 config.guess config.sub configure \
  configure.in configure.os2 install-sh ltconfig ltmain.sh mkinstalldirs \
  sane-backends.lsm

.PHONY: all all-recursive clean clean-recursive depend \
  depend-recursive dist install install-recursive libcheck lsm \
  sane-backends sort-cvsignore uninstall uninstall-recursive

all:    brscan  brscan2 

brscan:
	(cd backend_brscan && make brscan)
	(cd netconfig && make brscan)
	(cd mk_package  && make brscan)

brscan2:
	(cd backend_brscan2 && make brscan2)
	(cd netconfig && make brscan2)
	(cd mk_package  && make brscan2)

clean: clean-recursive

distclean: clean distclean-recursive
	rm -f *~ *.log *.bak libtool
	rm -f Makefile config.cache config.status
	rm -rf $(distdir)

depend: depend-recursive

all-recursive install-recursive clean-recursive distclean-recursive \
depend-recursive uninstall-recursive:
	@for subdir in $(SUBDIRS); do		\
	  target=`echo $@ | sed s/-recursive//`; \
	  echo making $$target in $$subdir;	\
	  (cd $$subdir && $(MAKE) $$target)	\
	   || case "$(MFLAGS)" in *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

dist: $(DISTFILES)
	rm -fr $(distdir)
	$(MKDIR) $(distdir)
	for file in $(DISTFILES); do \
	  ln $$file $(distdir) 2>/dev/null || cp -p $$file $(distdir); \
	done
#	for subdir in $(SUBDIRS) japi testsuite ; do \
#	  mkdir $(distdir)/$$subdir || exit 1; \
#	  chmod 777 $(distdir)/$$subdir; \
#	  (cd $$subdir && $(MAKE) $@) || exit 1; \
#	done
	tar chzf $(distdir).tar.gz $(distdir)
	rm -fr $(distdir)

